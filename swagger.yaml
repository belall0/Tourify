openapi: 3.0.0
info:
  title: Tourify
  description: Tourify is a RESTful API designed for multi-operator tour management
  version: 1.0.0
  contact:
    name: Belal Muhammad
    email: belallmuhammad0@gmail.com
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /api/users/signup:
    post:
      tags: [Users]
      summary: Register a new user
      description: Register a new user with name, email, password, role, and photo and send a verification email
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's full name
                  example: Belal Muhammad
                email:
                  type: string
                  description: Your email must be valid as a verification email will be sent.
                  example: belallmuhammad0@gmail.com
                password:
                  type: string
                  description: Password must be at least 8 characters long
                  example: password
                role:
                  type: string
                  description: role must be either customer or operator
                  example: customer
                  enum: [customer, operator]
                photo:
                  type: string
                  description: User's profile photo in jpg or png format
                  example: photo.jpg
                  format: binary
              required: [name, email, password]
      responses:
        200:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Thanks for signing up! Please check your email (including spam) to activate your account. you have 10 minutes to verify your email.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: "Duplicate value for email: 'belallmuhammad0@gmail.com'"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Internal server error'

  /api/users/resend-verification:
    post:
      tags: [Users]
      summary: Resend verification email
      description: Resend verification email to the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Your email must be valid as a verification email will be sent.
                  example: belallmuhammad0@gmail.com
              required: [email]
      responses:
        200:
          description: Verification email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Verification code sent to email. you have 10 minutes to verify your email
        400:
          description: Bad request, email not provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 'Please provide email!'
        404:
          description: Not found, unverified user not found with this email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: 'No unverified user found with this email address'
